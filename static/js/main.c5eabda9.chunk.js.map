{"version":3,"sources":["components/header.jsx","types/index.js","config/axios.js","actions/productActions.js","components/Product.jsx","components/Products.jsx","actions/alertActions.js","components/NewProduct.jsx","components/EditProduct.jsx","reducers/productsReducer.js","reducers/alertReducer.js","reducers/index.js","store.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","ADD_PRODUCT","ADD_PRODUCT_OK","ADD_PRODUCT_ERROR","START_LOADING_PRODUCTS","LOADING_PRODUCTS_OK","LOADING_PRODUCTS_ERROR","GET_PRODUCT_DELETE","PRODUCT_DELETE_OK","PRODUCT_DELETE_ERROR","GET_PRODUCT_EDIT","PRODUCT_EDIT_OK","PRODUCT_EDIT_ERROR","SHOW_ALERT","HIDE_ALERT","clientAxios","axios","create","baseURL","addProduct","type","payload","addProductOK","product","addProductError","state","loadProducts","loadProductsOK","products","loadProductsError","getProductDelete","id","deleteProductOK","deleteProductError","getEditProduct","editProduct","editProductOK","editProductError","Product","name","price","dispatch","useDispatch","history","useHistory","confirmDelete","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","a","delete","console","log","deleteProductAccion","redirectEdition","getEditProductAction","push","onClick","Products","useEffect","get","response","data","useSelector","error","loading","scope","length","map","createAlert","alert","hideAlert","NewProduct","useState","setName","setPrice","post","createNewProductAction","classes","msg","onSubmit","e","preventDefault","trim","showAlertAction","placeholder","value","onChange","target","Number","EditProduct","setProduct","producttoedit","editproduct","onChangeForm","put","editProductAction","initialState","deleteproduct","combineReducers","action","filter","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5eabda9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, BrowserRouter } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <nav className=\"navbar navbar-expand-lg navbar dark bg-primary justify-content-between\">\r\n            <div className=\"cotainer\">\r\n                <h1>\r\n                    <Link to={'/'} className=\"text-light\">\r\n                        CRUD - React, REDUX, REST API & Axios\r\n                    </Link>\r\n                </h1>\r\n            </div>\r\n            <Link to={\"/products/new\"}\r\n                className=\"btn btn-danger nuevo-post d-block d-md-inline-block\"\r\n            >Add product &#43;</Link>         \r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Header;","export const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const ADD_PRODUCT_OK = 'ADD_PRODUCT_OK';\r\nexport const ADD_PRODUCT_ERROR = 'ADD_PRODUCT_ERROR';\r\n\r\nexport const START_LOADING_PRODUCTS = 'START_LOADING_PRODUCTS';\r\nexport const LOADING_PRODUCTS_OK = 'LOADING_PRODUCTS_OK';\r\nexport const LOADING_PRODUCTS_ERROR = 'LOADING_PRODUCTS_ERROR';\r\n\r\nexport const GET_PRODUCT_DELETE = 'GET_PRODUCT_DELETE';\r\nexport const PRODUCT_DELETE_OK = 'PRODUCT_DELETE_OK';\r\nexport const PRODUCT_DELETE_ERROR = 'PRODUCT_DELETE_ERROR';\r\n\r\nexport const GET_PRODUCT_EDIT = 'GET_PRODUCT_EDIT';\r\nexport const START_PRODUCT_EDIT = 'START_PRODUCT_EDIT';\r\nexport const PRODUCT_EDIT_OK = 'PRODUCT_EDIT_OK';\r\nexport const PRODUCT_EDIT_ERROR = 'PRODUCT_EDIT_ERROR';\r\n\r\nexport const SHOW_ALERT = 'SHOW_ALERT';\r\nexport const HIDE_ALERT = 'HIDE_ALERT';\r\n\r\n","import axios from 'axios';\r\n\r\nconst clientAxios = axios.create({\r\n    //baseURL: 'http://localhost:4000/'    \r\n    baseURL: 'https://my-json-server.typicode.com/ivanlalic/crud-react-redux-db'\r\n\r\n})\r\n\r\nexport default clientAxios;","import { \r\n    ADD_PRODUCT,\r\n    ADD_PRODUCT_OK,\r\n    ADD_PRODUCT_ERROR,\r\n    START_LOADING_PRODUCTS,\r\n    LOADING_PRODUCTS_OK,\r\n    LOADING_PRODUCTS_ERROR,\r\n    GET_PRODUCT_DELETE,\r\n    PRODUCT_DELETE_OK,\r\n    PRODUCT_DELETE_ERROR,\r\n    GET_PRODUCT_EDIT,\r\n    START_PRODUCT_EDIT,\r\n    PRODUCT_EDIT_OK,\r\n    PRODUCT_EDIT_ERROR\r\n\r\n } from '../types';\r\n\r\nimport clientAxios from '../config/axios';\r\nimport Swal from 'sweetalert2';\r\n\r\n //create new products\r\n export function createNewProductAction(product) {\r\n     return async (dispatch) => {\r\n        dispatch( addProduct() );\r\n\r\n        try {\r\n            //Insert to API\r\n            await clientAxios.post('/products', product);\r\n            //if the insert (post) works fine, you pass it to the state\r\n            dispatch( addProductOK(product) );\r\n            //Alert\r\n            Swal.fire(\r\n                'Correct',\r\n                'Product added succesully',\r\n                'success'\r\n            );\r\n        } catch (error) { \r\n            //If there is an error\r\n            dispatch( addProductError(true) );\r\n            //Alert→Error\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'Try again'\r\n            })\r\n        }\r\n\r\n    }\r\n }\r\n\r\nconst addProduct = () => ({\r\n     type: ADD_PRODUCT,\r\n     payload: true\r\n });\r\n\r\n //If product is succesully stored in DB\r\nconst addProductOK = product => ({ //whats beetween () is the action→so...action.payload is the product\r\n    type: ADD_PRODUCT_OK,\r\n    payload: product\r\n}) \r\n\r\n //If there was an error\r\nconst addProductError = (state) => ({\r\n    type: ADD_PRODUCT_ERROR,\r\n    payload: state\r\n});\r\n\r\n\r\n// Function to download products from DB\r\nexport default function getProductsAction() {\r\n    return async (dispatch) => {\r\n        dispatch( loadProducts() );\r\n\r\n        //Call API\r\n        try {\r\n            const response = await clientAxios.get('/products');\r\n            dispatch( loadProductsOK(response.data) );    \r\n        } catch (error) {\r\n            dispatch( loadProductsError() );\r\n        }\r\n\r\n    }\r\n};\r\n\r\nconst loadProducts = () => ({\r\n    type: START_LOADING_PRODUCTS,\r\n    payload: true\r\n})\r\n\r\nconst loadProductsOK = products => ({\r\n    type: LOADING_PRODUCTS_OK,\r\n    payload: products\r\n})\r\n\r\nconst loadProductsError = () => ({\r\n    type: LOADING_PRODUCTS_ERROR,\r\n    payload: true\r\n})\r\n\r\n//Select and delete product\r\nexport function deleteProductAccion(id) {\r\n    return async (dispatch) => {\r\n        dispatch( getProductDelete(id) );\r\n        \r\n        try {\r\n            await clientAxios.delete(`/products/${id}`);\r\n            \r\n            dispatch( deleteProductOK() );\r\n\r\n            //If you delete it→show alert\r\n            Swal.fire(\r\n                'Deleted!',\r\n                'Your file has been deleted.',\r\n                'success'\r\n            )\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch( deleteProductError() );\r\n        }\r\n\r\n\r\n\r\n    }\r\n} \r\n\r\nconst getProductDelete = id => ({\r\n    type: GET_PRODUCT_DELETE,\r\n    payload: id\r\n});\r\n\r\nconst deleteProductOK = () => ({\r\n    type: PRODUCT_DELETE_OK\r\n    \r\n})\r\n\r\nconst deleteProductError = () => ({\r\n    type: PRODUCT_DELETE_ERROR,\r\n    payload: true\r\n})\r\n\r\n\r\n//Select and set product to edit\r\nexport function getEditProductAction (product) {\r\n    return (dispatch) => {\r\n        dispatch( getEditProduct(product) );\r\n    }\r\n};\r\n\r\nconst getEditProduct = product => ({\r\n    type: GET_PRODUCT_EDIT,\r\n    payload: product\r\n});\r\n\r\n//Edit product in API and state\r\nexport function editProductAction(product) { //this \"product\" is the new one , the changed product\r\n    return async (dispatch) => {\r\n        dispatch( editProduct(product) );\r\n\r\n        try {\r\n            await clientAxios.put(`/products/${product.id}`, product);\r\n            dispatch( editProductOK(product) );\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch( editProductError() );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst editProduct = () => ({ //is the new product\r\n    type: START_PRODUCT_EDIT\r\n})\r\n\r\nconst editProductOK = product => ({ //is the new product\r\n    type: PRODUCT_EDIT_OK,\r\n    payload: product\r\n})\r\n\r\nconst editProductError = () => ({ \r\n    type: PRODUCT_EDIT_ERROR,\r\n    payload: true\r\n})\r\n\r\n","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Swal from 'sweetalert2'; \r\n\r\n//Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteProductAccion, getEditProductAction } from '../actions/productActions';\r\n\r\n\r\nconst Product = ({product}) => {\r\n\r\n    const {name, id, price} = product;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //Able history to redirect\r\n    const history = useHistory(); \r\n\r\n    //Confirm if u want to delete product\r\n    const confirmDelete = id => {\r\n\r\n\r\n        //Ask user\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!',\r\n            cancelButtonText: 'Cancel'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                //pass to action\r\n                dispatch( deleteProductAccion(id) )\r\n            }\r\n          })\r\n    }\r\n\r\n\r\n    //Function to redirect \r\n    const redirectEdition = product => {\r\n        dispatch( getEditProductAction(product) );\r\n        history.push(`/products/edit/${product.id}`)\r\n    }\r\n\r\n\r\n    return ( \r\n        <tr>\r\n            <td>{name}</td>\r\n            <td><span className=\"font-weight-bold\">${price}</span></td>\r\n            <td className=\"acciones\">\r\n                <button \r\n                    type=\"button\"\r\n                    onClick={ () => redirectEdition(product) }\r\n                    className=\"btn btn-primary mr-2\">\r\n                    Edit\r\n                </button>\r\n                <button \r\n                    type=\"button\"\r\n                    className=\"btn btn-danger\"\r\n                    onClick={ () => confirmDelete(id)} \r\n                >Delete</button>\r\n            </td>\r\n        </tr>\r\n     );\r\n}\r\n \r\nexport default Product;","import React, {Fragment, useEffect} from 'react';\r\nimport Product from './Product';\r\n\r\n//Redux\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport getProductsAction from '../actions/productActions'; \r\n\r\nconst Products = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        //Consult API \r\n        const loadProducts = () => dispatch ( getProductsAction() );\r\n        loadProducts();\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n\r\n    //Get state\r\n    const products = useSelector( state => state.products.products );\r\n    const error = useSelector( state => state.products.error );\r\n    const loading = useSelector (state => state.products.loading);\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h2 className=\"text-center my-5\">Products List</h2>\r\n            \r\n            {error ? <p className=\"font-weight-bold alert alert-danger text-center mt-4\">Error</p> : null}\r\n\r\n            {loading ? <p className=\"text-center\">Loading...</p> : null}\r\n\r\n            <table className=\"table table-striped\">\r\n                <thead className=\"bg-primary table-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Price</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {products.length === 0 ? 'No products' : (\r\n                        products.map(product =>  (\r\n                            <Product\r\n                                key={product.id}\r\n                                product={product}\r\n                            />\r\n                        ))\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n        \r\n     );\r\n}\r\n \r\nexport default Products;","import {\r\n    SHOW_ALERT,\r\n    HIDE_ALERT\r\n} from '../types';\r\n\r\n//Show alert\r\nexport function showAlertAction(alert) {\r\n    return (dispatch) => {\r\n        dispatch( createAlert(alert) );\r\n    }\r\n}\r\n\r\nconst createAlert = alert =>({\r\n    type: SHOW_ALERT,\r\n    payload: alert\r\n})\r\n\r\n//Hide alert\r\n\r\nexport function hideAlertAction() {\r\n    return (dispatch) => {\r\n        dispatch ( hideAlert() );\r\n    }\r\n}\r\n\r\nconst hideAlert = () => ({\r\n    type: HIDE_ALERT\r\n})","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//Actions of Redux\r\nimport {createNewProductAction} from '../actions/productActions';\r\nimport { showAlertAction, hideAlertAction } from '../actions/alertActions';\r\n\r\nconst NewProduct = ({history}) => {\r\n\r\n    //Define state of component - local\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n\r\n\r\n    //Use useDispatch and it creates a function\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    //Access to the store state\r\n    const loading = useSelector( state => state.products.loading);\r\n    const error = useSelector( state => state.products.error );\r\n    const alert = useSelector(state => state.alert.alert); //this is the 2ndo state (alertReducer.js) and index from reducers folder\r\n\r\n    //Call action of productActions\r\n    const addProduct = (product) => dispatch( createNewProductAction(product) ); //Im passing the product\r\n\r\n\r\n    //When user press submit\r\n    const submitNewProduct = e =>{\r\n        e.preventDefault();\r\n\r\n        //Validate form\r\n        if(name.trim() === '' || price <= 0) {\r\n\r\n            const alert = {\r\n                msg: 'All fields are required',\r\n                classes: 'alert alert-danger text-center text-uppercase p3'\r\n            }\r\n\r\n            dispatch( showAlertAction(alert) );\r\n\r\n            return;\r\n        }\r\n\r\n\r\n        //if there are no errors\r\n\r\n        dispatch( hideAlertAction() );\r\n\r\n        //create new product\r\n        addProduct({\r\n            name,\r\n            price\r\n        });\r\n\r\n        //Redirect after add a product\r\n        history.push('/');\r\n\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h2 className=\"text-center mb-4 font-weight-bold\">Add New Product</h2>\r\n\r\n                        { alert ? <p className={alert.classes}>{alert.msg}</p> : null}\r\n\r\n                        <form\r\n                            onSubmit={submitNewProduct}\r\n                        >\r\n                            <div className=\"form-group\">\r\n                                <label>Product name</label>\r\n                                <input \r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Product name\"\r\n                                    name=\"name\"\r\n                                    value={name}\r\n                                    onChange={e=>setName(e.target.value)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Product Price</label>\r\n                                <input \r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Product price\"\r\n                                    name=\"price\"\r\n                                    value={price}\r\n                                    onChange={e=>setPrice(Number(e.target.value))}\r\n                                />\r\n                            </div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\r\n                            >Add</button>\r\n                        </form>\r\n                        { loading ? <p>Loading...</p> : null }\r\n                        { error ? <p className=\"alert alert-danger p2 mt-4 text-center\">Error</p> : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NewProduct;","import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { editProductAction } from '../actions/productActions';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst EditProduct = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    //Define new state (to edit product)\r\n    const [ product, setProduct ] = useState({\r\n        name: '',\r\n        price: ''\r\n    });\r\n\r\n\r\n\r\n    //Product to be edited\r\n    const producttoedit = useSelector(state => state.products.editproduct);\r\n    //if(!product) return null;\r\n\r\n    \r\n    //Fill the new state(because of the edit)\r\n    useEffect( () => {\r\n        setProduct(producttoedit);\r\n    }, [producttoedit] );\r\n\r\n\r\n    //Read data from form\r\n    const onChangeForm = e => {\r\n        setProduct({\r\n            ...product,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    const { name, price } = product;\r\n\r\n    const submitEditProduct = e => {\r\n        e.preventDefault();\r\n\r\n        dispatch(editProductAction (product) ); //the \"product\" is already in the state, the new product\r\n        history.push('/');\r\n    }\r\n\r\n    return ( \r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h2 className=\"text-center mb-4 font-weight-bold\">Edit Product</h2>\r\n                        <form\r\n                            onSubmit={submitEditProduct}\r\n                        >\r\n                            <div className=\"form-group\">\r\n                                <label>Product name</label>\r\n                                <input \r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Product name\"\r\n                                    name=\"name\"\r\n                                    value={name}\r\n                                    onChange={onChangeForm}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Product Price</label>\r\n                                <input \r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Product price\"\r\n                                    name=\"price\"\r\n                                    value={price}\r\n                                    onChange={onChangeForm}\r\n                                />\r\n                            </div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\r\n                            >Save</button>\r\n                            \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default EditProduct;","import { \r\n    ADD_PRODUCT,\r\n    ADD_PRODUCT_OK,\r\n    ADD_PRODUCT_ERROR,\r\n    START_LOADING_PRODUCTS,\r\n    LOADING_PRODUCTS_OK,\r\n    LOADING_PRODUCTS_ERROR,\r\n    GET_PRODUCT_DELETE,\r\n    PRODUCT_DELETE_OK,\r\n    PRODUCT_DELETE_ERROR,\r\n    GET_PRODUCT_EDIT,\r\n    START_PRODUCT_EDIT,\r\n    PRODUCT_EDIT_OK,\r\n    PRODUCT_EDIT_ERROR\r\n\r\n } from '../types';\r\n\r\n\r\n//Every reducer has its state\r\nconst initialState = {\r\n    products: [],\r\n    error: null,\r\n    loading: false,\r\n    deleteproduct: null,\r\n    editproduct: null\r\n}\r\n\r\nexport default function productsReducer(state = initialState, action ) {\r\n    switch(action.type) {\r\n        case START_LOADING_PRODUCTS:\r\n        case ADD_PRODUCT:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case ADD_PRODUCT_OK:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                products: [...state.products, action.payload] \r\n            }\r\n        case ADD_PRODUCT_ERROR:\r\n        case LOADING_PRODUCTS_ERROR:\r\n        case PRODUCT_DELETE_ERROR:\r\n        case PRODUCT_EDIT_ERROR:\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload\r\n            }\r\n        case LOADING_PRODUCTS_OK:\r\n            return {\r\n                ...state,\r\n                products: action.payload,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case GET_PRODUCT_DELETE:\r\n            return {\r\n                ...state,\r\n                deleteproduct: action.payload\r\n            }\r\n        case PRODUCT_DELETE_OK:\r\n            return {\r\n                ...state,\r\n                products: state.products.filter( product => product.id !== state.deleteproduct ),\r\n                deleteproduct: null\r\n            }\r\n        case GET_PRODUCT_EDIT:\r\n            return {\r\n                ...state,\r\n                editproduct: action.payload\r\n            }\r\n        case PRODUCT_EDIT_OK:\r\n            return {\r\n                ...state,\r\n                editproduct: null,\r\n                products: state.products.map(product => \r\n                    product.id === action.payload.id ? product = action.payload \r\n                    : product\r\n                ) //iterate over every product, and if a product(id) is the same that the one that it is being passed (action.payload), then set product to the new one (action.payload)\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import {\r\n    SHOW_ALERT,\r\n    HIDE_ALERT\r\n} from '../types';\r\n\r\n//Each reducer has its own state\r\n\r\nconst initialState = {\r\n    alert: null\r\n}\r\n\r\nexport default function alertReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SHOW_ALERT:\r\n            return {\r\n                ...state,\r\n                alert: action.payload\r\n            }\r\n            \r\n        case HIDE_ALERT:\r\n            return {\r\n                ...state,\r\n                alert: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport productsReducer from './productsReducer';\r\nimport alertReducer from './alertReducer';\r\n\r\nexport default combineReducers({\r\n    products: productsReducer,\r\n    alert: alertReducer\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    compose(applyMiddleware(thunk), \r\n    typeof window === 'object' &&\r\n        typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? \r\n            window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\r\n    )\r\n\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport Header from './components/header';\nimport Products from './components/Products';\nimport NewProduct from './components/NewProduct';\nimport EditProduct from './components/EditProduct';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={store}>\n        <Header />\n          <div className=\"container mt-5\">\n            <Switch>\n              <Route exact path='/' component={Products} />\n              <Route exact path='/products/new' component={NewProduct} />\n              <Route exact path='/products/edit/:id' component={EditProduct} />\n            </Switch>\n          </div>\n        </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}